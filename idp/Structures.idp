structure Harder : V_out {
    number = {0..20}

    Time = {0..20}
    district = {Rivertown; Easttown; Downtown; Merchant_District}
    building = {Shop;Library; Bank; Station}
    Has_Connection = {(Rivertown, Easttown); (Easttown, Downtown); (Downtown, Merchant_District); (Merchant_District, Rivertown); (Shop, Merchant_District); (Bank, Downtown); (Station, Easttown); (Library, Rivertown)}
    I_Location = Bank
    Closed_To_Win = 2
    Open_To_Lose = 3
    C_Open_Gate = {(0,Shop); (8,Bank); (14,Shop); (16, Library); (18, Station)}
    
    
    // The following part is needed for the visualisation, 
    // DO NOT change
    width = {0..100}
    height = {0..100}
    time = {0..20}
    color = {"red"; "green"; "black"; "purple"; "darkred"; "darkgreen"}
    locationToKey = procedure locationToKey
    locationLink = procedure locationLink
    numberToLabel = procedure numberToLabel
    locationToLabel = procedure locationToLabel
    stateToLabel = procedure stateToLabel
    timeToLabel = procedure timeToLabel
    cluesToLabel = procedure cluesToLabel
    openToLabel = procedure openToLabel
    closeToLabel = procedure closeToLabel
    monstersToLabel = procedure monstersToLabel
    detective = "detective"
    bluesClues  = "clues"
    stateKey = "gameState"
    timeKey = "timeKey"
    openKey = "openKey"
    closedKey = "closedKey"
    monsterKey = "monsterKey"
    image={0}
    order={0}
}

structure Easy : V_out {
    number = {0..20}

    Time = {0..20}
    district = {Merchant_District; River_District; Easttown}
    building = {Shop}
    Has_Connection = {(Shop, Merchant_District); (Merchant_District, River_District); (River_District, Easttown); (Easttown, Merchant_District)}
    I_Location = Shop
    Closed_To_Win = 1
    Open_To_Lose = 2
    C_Open_Gate={(0,Shop)}
    Start = 0


    // The following part is needed for the visualisation, 
    // DO NOT change        
    width = {0..100}
    height = {0..100}
    time = {0..20}
    color = {"red"; "green"; "black"; "purple"; "darkred"; "darkgreen"}
    locationToKey = procedure locationToKey
    locationLink = procedure locationLink
    numberToLabel = procedure numberToLabel
    locationToLabel = procedure locationToLabel
    stateToLabel = procedure stateToLabel
    timeToLabel = procedure timeToLabel
    cluesToLabel = procedure cluesToLabel
    openToLabel = procedure openToLabel
    closeToLabel = procedure closeToLabel
    monstersToLabel = procedure monstersToLabel
    detective = "detective"
    bluesClues  = "clues"
    stateKey = "gameState"
    timeKey = "timeKey"
    openKey = "openKey"
    closedKey = "closedKey"
    monsterKey = "monsterKey"
    image={0}
    order={0}

}
structure Impossible : V_out {
    number = {0..20}

    Time = {0..20}
    district = {Rivertown; Easttown; Downtown; Merchant_District}
    building = {Shop;Library; Bank; Station}
    Has_Connection = {(Rivertown, Easttown); (Easttown, Downtown); (Downtown, Merchant_District); (Merchant_District, Rivertown); (Shop, Merchant_District); (Bank, Downtown); (Station, Easttown); (Library, Rivertown)}
    I_Location = Bank
    Closed_To_Win = 2
    Open_To_Lose = 3
    C_Open_Gate={(0,Shop); (2,Bank); (4, Library)}
    
    // The following part is needed for the visualisation, 
    // DO NOT change        
    width = {0..100}
    height = {0..100}
    time = {0..20}
    color = {"red"; "green"; "black"; "purple"; "darkred"; "darkgreen"}
    locationToKey = procedure locationToKey
    locationLink = procedure locationLink
    numberToLabel = procedure numberToLabel
    locationToLabel = procedure locationToLabel
    stateToLabel = procedure stateToLabel
    timeToLabel = procedure timeToLabel
    cluesToLabel = procedure cluesToLabel
    openToLabel = procedure openToLabel
    closeToLabel = procedure closeToLabel
    monstersToLabel = procedure monstersToLabel
    detective = "detective"
    bluesClues  = "clues"
    stateKey = "gameState"
    timeKey = "timeKey"
    openKey = "openKey"
    closedKey = "closedKey"
    monsterKey = "monsterKey"
    image={0}
    order={0}
}

structure Unlosable : V_out {
    number = {0..20}

    Time = {0..20}
    district = {Rivertown; Easttown; Downtown; Merchant_District}
    building = {Shop;Library; Bank; Station}
    Has_Connection = {(Rivertown, Easttown); (Easttown, Downtown); (Downtown, Merchant_District); (Merchant_District, Rivertown); (Shop, Merchant_District); (Bank, Downtown); (Station, Easttown); (Library, Rivertown)}
    I_Location = Bank
    Closed_To_Win = 2
    Open_To_Lose = 3
    C_Open_Gate={(0,Shop); (2,Bank);}
    
    // The following part is needed for the visualisation, 
    // DO NOT change            
    width = {0..100}
    height = {0..100}
    time = {0..20}
    color = {"red"; "green"; "black"; "purple"; "darkred"; "darkgreen"}
    locationToKey = procedure locationToKey
    locationLink = procedure locationLink
    numberToLabel = procedure numberToLabel
    locationToLabel = procedure locationToLabel
    stateToLabel = procedure stateToLabel
    timeToLabel = procedure timeToLabel
    cluesToLabel = procedure cluesToLabel
    openToLabel = procedure openToLabel
    closeToLabel = procedure closeToLabel
    monstersToLabel = procedure monstersToLabel
    detective = "detective"
    bluesClues  = "clues"
    stateKey = "gameState"
    timeKey = "timeKey"
    openKey = "openKey"
    closedKey = "closedKey"
    monsterKey = "monsterKey"
    image={0}
    order={0}
}

structure BoxedIn : V_out {
    number = {0..20}

    Time = {0..10}
    district = {Rivertown; Downtown}
    building = {Shop;Library; Bank; Station}
    Has_Connection = {(Shop, Rivertown); (Library, Rivertown); (Bank, Downtown); (Downtown, Rivertown); (Station, Downtown)}
    I_Location = Bank
    Closed_To_Win = 5
    Open_To_Lose = 5
    C_Open_Gate={(2,Shop); (2,Bank); (4, Library); (4, Station)}
    
    // The following part is needed for the visualisation, 
    // DO NOT change            
    width = {0..100}
    height = {0..100}
    time = {0..20}
    color = {"red"; "green"; "black"; "purple"; "darkred"; "darkgreen"}
    locationToKey = procedure locationToKey
    locationLink = procedure locationLink
    numberToLabel = procedure numberToLabel
    locationToLabel = procedure locationToLabel
    stateToLabel = procedure stateToLabel
    timeToLabel = procedure timeToLabel
    cluesToLabel = procedure cluesToLabel
    openToLabel = procedure openToLabel
    closeToLabel = procedure closeToLabel
    monstersToLabel = procedure monstersToLabel
    detective = "detective"
    bluesClues  = "clues"
    stateKey = "gameState"
    timeKey = "timeKey"
    openKey = "openKey"
    closedKey = "closedKey"
    monsterKey = "monsterKey"
    image={0}
    order={0}
}

structure Unplayable : V_out {
    number = {0..20}

    Time = {0..10}
    district = {Rivertown; Easttown; Downtown; Merchant_District; Southside; Uptown; Northside}
    building = {Shop;Library; Bank; Station}
    Has_Connection = {(Easttown, Downtown); (Downtown, Northside); (Northside, Merchant_District); (Merchant_District, Easttown); (Rivertown, Southside); (Southside, Uptown); (Uptown, Rivertown);(Shop, Merchant_District); (Bank, Downtown); (Station, Easttown); (Library, Rivertown)}
    I_Location = Bank
    Closed_To_Win = 2
    Open_To_Lose = 3
    C_Open_Gate={(0,Shop); (2,Bank);}
    
    // The following part is needed for the visualisation, 
    // DO NOT change                
    width = {0..100}
    height = {0..100}
    time = {0..10}
    color = {"red"; "green"; "black"; "purple"; "darkred"; "darkgreen"}
    locationToKey = procedure locationToKey
    locationLink = procedure locationLink
    numberToLabel = procedure numberToLabel
    locationToLabel = procedure locationToLabel
    stateToLabel = procedure stateToLabel
    timeToLabel = procedure timeToLabel
    cluesToLabel = procedure cluesToLabel
    openToLabel = procedure openToLabel
    closeToLabel = procedure closeToLabel
    monstersToLabel = procedure monstersToLabel
    detective = "detective"
    bluesClues  = "clues"
    stateKey = "gameState"
    timeKey = "timeKey"
    openKey = "openKey"
    closedKey = "closedKey"
    monsterKey = "monsterKey"
    image = {0}
    order= {0}
}